import {useContext, useEffect} from "react";
import useFetch from "hooks/useFetch";
import {CurrentUserContext} from "contexts/currentUser"
import useLocalStorage from "hooks/useLocalStorage";

const CurrentUserChecker = ({children}) => {
    const [{response}, doFetch] = useFetch('/user')
    const [, dispatch] = useContext(CurrentUserContext)
    const [token] = useLocalStorage('token')

    useEffect(() => {
        if (!token){
            // setCurrentUserState(state => ({
            //     ...state,
            //     isLoggedIn: false
            // }))
            dispatch({type: 'SET_UNAUTHORIZED'})
            return
        }
        doFetch()
        // setCurrentUserState(state => ({
        //     ...state,
        //     isLoading: true
        // }))
        dispatch({type: 'LOADING'})
    }, [ token, dispatch ])

    useEffect(() => {
        if (!response) return

        // setCurrentUserState(state => ({
        //     ...state,
        //     isLoggedIn: true,
        //     isLoading: false,
        //     currentUser: response.user
        // }))
        dispatch({type: 'SET_AUTHORIZED', payload: response.user})

    }, [response])



    return children
}

export default CurrentUserChecker