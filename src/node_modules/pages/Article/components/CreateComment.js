import React, {useContext, useEffect, useState} from "react";

import BackendErrorMessages from "components/BackendErrorMessages";

import {CurrentUserContext} from "contexts/currentUser";
import useFetch from "hooks/useFetch";
import {useParams} from "react-router-dom";

const CreateComment = ({useComments: [comments, setComments]}) => {
    const [currentUserState] = useContext(CurrentUserContext);

    const {slug} = useParams();
    const api = `/articles/${slug}/comments`;
    const [{isLoading, response, error}, doFetch] = useFetch(api);

    //Костыль - временное решение для получения аватара пользователя, т.к.
    //API - не отправляет корректный url иконки
    const apiProfile = `/profiles/${currentUserState?.currentUser?.username}`;
    const [{response: responseProfile}, doFetchProfile] = useFetch(apiProfile);
    const [imageUserAvatar, setImageUserAvatar] = useState('');
    useEffect(() => {
        doFetchProfile();
    }, [doFetchProfile])

    useEffect(() => {
        if (!responseProfile) {
            return;
        }

        setImageUserAvatar(responseProfile.profile.image);
    }, [responseProfile])



    const [body, setBody] = useState('');

    const handleSubmit = (e) => {
        e.preventDefault();

        if (isLoading) {
            return;
        }

        doFetch({
            method: 'POST',
            data: {comment:{body}},
        })
    }

    useEffect(() => {
        if (!response){
            return;
        }

        setBody('');
        setComments([...comments, response.comment]);
    }, [response])

    return (
        <div>
            {error && <BackendErrorMessages backendErrors={error.errors}/>}
            <form className='card comment-form ng-untouched ng-pristine ng-valid' onSubmit={handleSubmit}>
                <fieldset>
                    <div className='card-block'>
                        <textarea
                            value={body}
                            onChange={e => setBody(e.target.value)}
                            className='form-control ng-untouched ng-pristine ng-valid'
                            rows="3"
                            placeholder='Write a comment...'
                        >
                        </textarea>
                    </div>
                    {currentUserState.isLoggedIn && (
                        <div className='card-footer'>
                            <img src={imageUserAvatar}
                                 className='comment-author-img'/>
                            <button type='submit' className='btn btn-sm btn-primary'>
                                Post Comment
                            </button>
                        </div>
                    )}
                </fieldset>
            </form>
        </div>
    )
}

export default CreateComment;