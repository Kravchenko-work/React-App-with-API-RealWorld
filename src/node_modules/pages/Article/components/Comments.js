import React, {useContext, useEffect, useState} from "react";

import useFetch from "hooks/useFetch";
import {CurrentUserContext} from "contexts/currentUser";
import {transformDate} from "utils.js";

import CreateComments from "pages/Article/components/CreateComment";
import {NavLink, useParams} from "react-router-dom";

const Comments = () => {
    const { slug } = useParams();
    const api = `/articles/${slug}/comments`;
    const [{isLoading, response }, doFetch] = useFetch(api);

    const [comments, setComments] = useState(null);

    useEffect(() => {
        if (isLoading) return

        doFetch()
    }, [doFetch])

    useEffect(() => {
        if (!response)
            return

        setComments(response.comments);
    }, [response])

    return (
        <div className='row'>
            <div className='col-xs-12 col-md-8 offset-md-2'>
                <CreateComments useComments={[comments, setComments]}></CreateComments>
                {comments && ( comments.map((item, index) => (
                        <Comment
                            comment={item}
                            key={index}
                            useComments={[comments, setComments]}
                        />
                    ))
                )}
            </div>
        </div>
    )
}

const Comment = ({useComments: [comments, setComments], comment}) => {
    const { slug } = useParams();
    const [currentUserState] = useContext(CurrentUserContext);

    const api = `/articles/${slug}/comments/${comment.id}`;
    const [{isLoading, response, error}, doFetch] = useFetch(api);

    const handleDeleteComment = () => {
        if (isLoading) return

        doFetch({
            method: 'DELETE'
        })
    }

    useEffect(() => {
        if (error || !response) return

        setComments(comments.filter(item => {
            return item.id !== comment.id
        }));
    }, [error, response])

    return (
        <div className='card'>
            <div className='card-block'>
                <div className='card-text'>
                    {comment.body}
                </div>
            </div>
            <div className='card-footer'>
                <NavLink to={`/profiles/${comment.author.username}`} className="comment-author">
                    <img
                        src={comment.author.image}
                        className='comment-author-img'
                    />
                </NavLink>
                &nbsp;&nbsp;
                <NavLink to={`/profiles/${comment.author.username}`} className='comment-author'>
                    {comment.author.username}
                </NavLink>
                <span className='date-posted'>{transformDate(comment.createdAt)}</span>
                {currentUserState?.currentUser?.username === comment.author.username && (
                    <span className='mod-options'>
                        <i className='ion-trash-a' onClick={handleDeleteComment}></i>
                    </span>
                )}
            </div>
        </div>
    )
}

export default Comments;