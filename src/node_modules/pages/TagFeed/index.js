import React, {Fragment, useEffect} from 'react';
import {stringify} from "query-string";

import useFetch from "hooks/useFetch";

import Feed from 'components/Feed';
import PopularTags from 'components/PopularTags';
import Loading from 'components/Loading';
import ErrorMessage from 'components/ErrorMessage';
import Pagination from 'components/Pagination';
import FeedToggler from 'components/FeedToggler';

import {getPaginator, limit} from "utils";
import {useLocation, useParams} from "react-router-dom";


const TagFeed = () => {
    const location = useLocation()
    const params = useParams();
    const {offset, currentPage} = getPaginator(location.search)
    const tagName = params.slug;

    const stringifiedParams = stringify({
        limit,
        offset,
        tag: tagName
    })

    const apiUrl = `/articles?${stringifiedParams}`
    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)
    const url = location.pathname

    useEffect(() => {
        doFetch()
    }, [doFetch, currentPage, tagName])

    return (
        <div className='home-page'>
            <div className='banner'>
                <div className='container'>
                    <h1>Medium clone</h1>
                    <p>A place to share knowledge</p>
                </div>
            </div>
            <div className='container page'>
                <div className='row'>
                    <div className='col-md-9'>
                        <FeedToggler tagName={tagName}/>
                        {isLoading && <Loading />}
                        {error && <ErrorMessage />}
                        {!isLoading && response && (
                           <Fragment>
                               <Feed articles={response.articles}/>
                               <Pagination total={response.articlesCount} limit={10} url={url} currentPage={currentPage}/>
                           </Fragment>
                        )}
                    </div>
                    <div className='col-md-3'>
                        <PopularTags></PopularTags>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default TagFeed