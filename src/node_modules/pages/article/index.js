import React, {useEffect, useContext, useState} from 'react';
import {Link, useParams, Navigate} from "react-router-dom";
import useFetch from "hooks/useFetch";

import Loading from 'components/Loading';
import ErrorMessage from 'components/ErrorMessage';
import TagList from 'components/TagList';
import {CurrentUserContext} from 'contexts/currentUser';

const Article = () => {
    const { slug } = useParams();
    const apiUrl = `/articles/${slug}`;
    const [
        {
            response: responseGetArticle,
            error: errorGetArticle,
            isLoading: isLoadingGetArticle
        },
        doFetchGetArticle
    ] = useFetch(apiUrl);
    const [
        {
            response: responseDeleteArticle,
            // error: errorDeleteArticle,
            // isLoading: isLoadingDeleteArticle
        },
        doFetchDeleteArticle
    ] = useFetch(apiUrl);
    const [currentUserState] = useContext(CurrentUserContext);
    const [isSuccessfullDelete, setIsSuccessfullDelete] = useState(false);



    const isAuthor = () => {
        if (!responseGetArticle || !currentUserState.isLoggedIn)
            return false

        return responseGetArticle.article.author.username === currentUserState.currentUser.username;
    }

    const deleteArticle = () => {
        doFetchDeleteArticle({
            method: 'delete'
        })
    }

    useEffect(() => {
        doFetchGetArticle()
    }, [doFetchGetArticle]);

    useEffect(() => {
        if (!responseDeleteArticle)
            return

        setIsSuccessfullDelete(true)
    }, [responseDeleteArticle])

    if (isSuccessfullDelete) {
        return <Navigate to={`/`}/>
    }

    return (
        <div className='article-page'>
            <div className='banner'>
                {!isLoadingGetArticle && responseGetArticle && (
                    <div className='container'>
                        <h1>{responseGetArticle.article.title}</h1>
                        <div className='article-meta'>
                            <Link to={`/profiles/${responseGetArticle.article.author.username}`}>
                                <img src={responseGetArticle.article.author.image} alt=""/>
                            </Link>
                            <div className='info'>
                                <Link to={`/profiles/${responseGetArticle.article.author.username}`}>
                                    {responseGetArticle.article.author.username}
                                </Link>
                                <span className='date'>{responseGetArticle.article.createdAt}</span>
                            </div>
                            {isAuthor() && (
                                <span>
                                    <Link className='btn btn-outline-secondary btn-sm' to={`/articles/${responseGetArticle.article.slug}/edit`}>
                                        <i className='ion-edit'></i>
                                        Edit Article
                                    </Link>
                                    <button
                                        className='btn btn-outline-danger btn-sm'
                                        onClick={deleteArticle}
                                    >
                                        <i className='ion-trash-a'></i>
                                        Delete article
                                    </button>
                                </span>
                            )}
                        </div>
                    </div>
                )}
            </div>
            <div className='container page'>
                {isLoadingGetArticle && <Loading/>}
                {errorGetArticle && <ErrorMessage/>}
                {!isLoadingGetArticle && responseGetArticle && (
                    <div className='row article-content'>
                        <div className='col-xs-12'>
                            <div>
                                <p>{responseGetArticle.article.body}</p>
                            </div>
                            <TagList tags={responseGetArticle.article.tagList}/>
                        </div>
                    </div>
                )}
            </div>
        </div>
    )
}

export default Article